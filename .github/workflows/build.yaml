name: Build Platform Target

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, reopened, edited, synchronize]

jobs:
  build-native:
    runs-on: macos-latest
    permissions:
      pull-requests: write
      actions: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BENCHER_API_TOKEN: ${{ secrets.BENCHER_API_TOKEN }}
      GODOT_BASE_BRANCH: main
      CACHE_NAME: v-sekai-world

    strategy:
      fail-fast: false
      matrix:
        precision: [double]
        platform: [macos]
        target: [editor, template_release, template_debug]

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.precision }}
      cancel-in-progress: true

    steps:
      - name: Set up dependencies
        run: brew install just hyperfine scons

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.22.3"

      - name: Set up placeholders
        run: |
          mkdir -p godot/bin/
          mkdir -p tpz/
          mkdir -p editor
          echo "This is the README for the Godot bin directory." > godot/bin/readme.md
          echo "This is the README for the TPZ directory." > tpz/readme.md
          echo "This is the README for the Editor directory." > editor/readme.md

      - name: Checkout code 
        uses: actions/checkout@v4 
  
      - name: Cache SCons cache 
        uses: actions/cache@v4 
        if: always() 
        with: 
          path: | 
            .scons_cache
          key: ${{ env.CACHE_NAME }}-${{ env.GODOT_BASE_BRANCH }}-${{ github.ref }}-${{ github.sha }}-${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.precision }}
          restore-keys: | 
            ${{ env.CACHE_NAME }}-${{ env.GODOT_BASE_BRANCH }}-${{ github.ref }}-${{ github.sha }}-${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.precision }}
            ${{ env.CACHE_NAME }}-${{ env.GODOT_BASE_BRANCH }}-${{ github.ref }}-${{ github.sha }}-${{ matrix.platform }}-${{ matrix.target }}  
            ${{ env.CACHE_NAME }}-${{ env.GODOT_BASE_BRANCH }}-${{ github.ref }}-${{ github.sha }}  
            ${{ env.CACHE_NAME }}-${{ env.GODOT_BASE_BRANCH }}-${{ github.ref }}  
            ${{ env.CACHE_NAME }}-${{ env.GODOT_BASE_BRANCH }}-refs/heads/${{ env.GODOT_BASE_BRANCH }}  
            ${{ env.CACHE_NAME }}-${{ env.GODOT_BASE_BRANCH }} 
  
      - name: Fetch dependencies and Build Platform Target 
        run: | 
          export PLATFORM_ARGS="fetch-vulkan-sdk"
          hyperfine --show-output --runs 1 'just $PLATFORM_ARGS && just build-platform-target ${{ matrix.platform }} ${{ matrix.target }} ${{ matrix.precision }}'

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.precision }}
          path: godot/bin/*

      - name: Upload TPZ File
        uses: actions/upload-artifact@v4
        with:
          name: Godot-${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.precision }}.tpz
          path: tpz

      - name: Upload Godot Editor Files
        uses: actions/upload-artifact@v4
        with:
          name: Godot-${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.precision }}
          path: editor

  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      actions: write
    container:
      image: fedora:39
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BENCHER_API_TOKEN: ${{ secrets.BENCHER_API_TOKEN }}
      GODOT_BASE_BRANCH: main
      CACHE_NAME: v-sekai-world

    strategy:
      fail-fast: false
      matrix:
        precision: [double]
        platform: [linuxbsd, windows, android, web]
        target: [editor, template_release, template_debug]

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.precision }}
      cancel-in-progress: true

    steps:
      - name: Set up dependencies
        run: dnf install -y just git

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.22.3"
          
      - name: Set up placeholders
        run: |
          mkdir -p godot/bin/
          mkdir -p tpz/
          mkdir -p editor
          echo "This is the README for the Godot bin directory." > godot/bin/readme.md
          echo "This is the README for the TPZ directory." > tpz/readme.md
          echo "This is the README for the Editor directory." > editor/readme.md

      - name: Checkout code 
        uses: actions/checkout@v4 
  
      - name: Cache SCons cache 
        uses: actions/cache@v4 
        if: always() 
        with: 
          path: | 
            .scons_cache  
            emsdk  
            osxcross  
            jdk  
            android_sdk  
            vulkan_sdk  
            mingw 
          key: ${{ env.CACHE_NAME }}-${{ env.GODOT_BASE_BRANCH }}-${{ github.ref }}-${{ github.sha }}-${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.precision }}
          restore-keys: | 
            ${{ env.CACHE_NAME }}-${{ env.GODOT_BASE_BRANCH }}-${{ github.ref }}-${{ github.sha }}-${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.precision }}
            ${{ env.CACHE_NAME }}-${{ env.GODOT_BASE_BRANCH }}-${{ github.ref }}-${{ github.sha }}-${{ matrix.platform }}-${{ matrix.target }}
            ${{ env.CACHE_NAME }}-${{ env.GODOT_BASE_BRANCH }}-${{ github.ref }}-${{ github.sha }}  
            ${{ env.CACHE_NAME }}-${{ env.GODOT_BASE_BRANCH }}-${{ github.ref }}  
            ${{ env.CACHE_NAME }}-${{ env.GODOT_BASE_BRANCH }}-refs/heads/${{ env.GODOT_BASE_BRANCH }}  
            ${{ env.CACHE_NAME }}-${{ env.GODOT_BASE_BRANCH }} 
  
      - name: Fetch dependencies and Build Platform Target 
        run: | 
          just install_packages 
          export PLATFORM_ARGS=""  
          case "${{ matrix.platform }}" in  
            android)  
              PLATFORM_ARGS="fetch-openjdk setup-android-sdk"  
              ;;  
            web)  
              PLATFORM_ARGS="setup-emscripten"  
              ;;  
            windows)  
              PLATFORM_ARGS="fetch-llvm-mingw"  
              ;;  
            macos)  
              PLATFORM_ARGS="build-osxcross fetch-vulkan-sdk"  
              ;;  
            *)  
              PLATFORM_ARGS="nil"  
              ;;  
          esac  
          hyperfine --show-output --runs 1 'just $PLATFORM_ARGS && just build-platform-target ${{ matrix.platform }} ${{ matrix.target }} ${{ matrix.precision }}'

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.precision }}
          path: godot/bin/*

      - name: Upload TPZ File
        uses: actions/upload-artifact@v4
        with:
          name: Godot-${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.precision }}.tpz
          path: tpz

      - name: Upload Godot Editor Files
        uses: actions/upload-artifact@v4
        with:
          name: Godot-${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.precision }}
          path: editor

  merge:
    runs-on: ubuntu-latest
    needs: ["build", "build-native"]
    strategy:
      fail-fast: false
      matrix:
        platform: [linuxbsd, windows, macos, android, web]
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: v-sekai-world-${{ matrix.platform }}
          pattern: "*${{ matrix.platform }}*"
          delete-merged: true

  release:
    runs-on: ubuntu-latest
    needs: merge
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest.v-sekai-editor-${{ github.run_number }}
          release_name: Latest Release of V-Sekai Godot Engine Editor
          draft: false
          prerelease: true

  upload-releases:
    runs-on: ubuntu-latest
    needs: release
    strategy:
      fail-fast: false
      matrix:
        platform: [linuxbsd, windows, macos, android, web]
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: v-sekai-world-${{ matrix.platform }}
          name: v-sekai-world-${{ matrix.platform }}

      - name: Zip Artifacts
        run: |
          tree
          zip -r v-sekai-world-${{ matrix.platform }}.zip v-sekai-world-${{ matrix.platform }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./v-sekai-world-${{ matrix.platform }}.zip
          asset_name: v-sekai-world-${{ matrix.platform }}.zip
          asset_content_type: application/zip
