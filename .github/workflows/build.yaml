name: Build Platform Target

on:
  push:
    branches: [test]
  pull_request:
    branches: [test]
    types: [opened, reopened, edited, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      actions: write
    container:
      image: fedora:39
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BENCHER_API_TOKEN: ${{ secrets.BENCHER_API_TOKEN }}
      GODOT_BASE_BRANCH: main
      CACHE_NAME: v-sekai-world

    strategy:
      fail-fast: false
      matrix:
        precision: [double]
        platform: [linuxbsd]
        target: [editor, template_release, template_debug]

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.precision }}
      cancel-in-progress: true

    steps:          
      - name: Set up placeholders
        run: |
          dnf -y install tree 
          mkdir -p godot/bin/
          mkdir -p tpz/
          mkdir -p editor
          echo "This is the README for the Godot bin directory." > godot/bin/rea_${{ matrix.platform }}_dme.exe
          echo "This is the README for the TPZ directory." > tpz/rea_${{ matrix.platform }}_dme.exe
          echo "This is the README for the Editor directory." > editor/rea_${{ matrix.platform }}_dme.exe

      - name: Checkout code 
        uses: actions/checkout@v4 
  
      - name: Fetch dependencies and Build Platform Target 
        run: | 
          echo "Fetch"
          tree -a -L 2
          mkdir -p godot/bin/
          mkdir -p tpz/
          mkdir -p editor
          echo "Test" > godot/bin/bintest.txt
          echo "Test" > tpz/tpztest.txt
          echo "Test" > editor/editortest.txt

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.precision }}
          path: godot/bin/*

      - name: Upload TPZ File
        uses: actions/upload-artifact@v4
        with:
          name: Godot-${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.precision }}.tpz
          path: tpz

      - name: Upload Godot Editor Files
        uses: actions/upload-artifact@v4
        with:
          name: Godot-${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.precision }}
          path: editor

  merge:
    runs-on: ubuntu-latest
    needs: ["build"]
    strategy:
      fail-fast: false
      matrix:
        platform: [linuxbsd, windows, macos, android, web]
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: v-sekai-world-${{ matrix.platform }}
          pattern: "*${{ matrix.platform }}*"
          delete-merged: true

  release:
    runs-on: ubuntu-latest
    needs: merge
    if: github.event_name == 'push'
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest.v-sekai-editor-test-${{ github.run_number }}
          release_name: Latest Release of V-Sekai Godot Engine Editor
          draft: false
          prerelease: true

  upload-releases:
    runs-on: ubuntu-latest
    needs: release
    strategy:
      fail-fast: false
      matrix:
        platform: [linuxbsd, windows, macos, android, web]
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: v-sekai-world-${{ matrix.platform }}
          name: v-sekai-world-${{ matrix.platform }}

      - name: Zip Artifacts
        run: |
          tree
          zip -r v-sekai-world-${{ matrix.platform }}.zip v-sekai-world-${{ matrix.platform }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./v-sekai-world-${{ matrix.platform }}.zip
          asset_name: v-sekai-world-${{ matrix.platform }}.zip
          asset_content_type: application/zip
